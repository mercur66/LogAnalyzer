- 개발 목적 및 내용
 1. 목적
    . 로그 분석 기반의 이상징후 분석 및 통보 시스템

 2. 개발 발향
   . 운영사이트의 로그를 취합하여 사용자 여정을 분석하는 프로그램 제작
   . 로그 분석 후 이상징후 감지하는 분석 기능 개발
   . 프로세스 맵작성
     .. 프로세스마이닝 개념의 기초 분석 자료 생성
     .. 단계별 흐름에 대한 시각화

 2. 내용
   . 분석 로그 대상 설정
   . 로그를 스케줄에 맞춰서 loading
   . 로그파일(테스트)을 읽어오서 DB에 저장 한다.
   . DB에 저장된 로그를 분석한다.
   . 이상징후 발생시 담당자에게 메일을 송부 한다.
   . 분석된 로그를 시각화로 표현한다.
   . 시각화 자료를 메일로 송부 한다.

- 활용 모듈
1. pandas 활용
   . log파일을 읽어와서 원하는 항목을 추출
   . 추출 항목을 DB에 저장
2. sqllite3 활용
   . 읽은 파일을 DB에 저장

- 진행내용

2/18(화)
 - log data import 시킴
 - sqllite2를 통해서 데이터 입력 코드 확인
 - pandas를 이용해서 데이터 로딩하고 각각의 데이터를 sqllite2에 입력하는 방법 필요
 - github 기초 세팅
   . github 사용 (git 의 리모트 저장소를 제공)
    .. 회원가입(http://github.com)
    .. git 다운로드 및 설치(https://www.git-scm.com/)
    .. 로컬 저장소와 github 저장소 연결
    .. 로컬 저장소가 위치할 디렉토리 오른쪽 클릭하여 git bash 실행
    .. git clone https://github.com/mercur66/python-study.git 입력 후 엔터(리모트 저장소에 있는 거를 로컬로 복사해온다)
       .. 초기화 할때만 사용가능
    .. git add * (로컬의 변경사항을 커밋 대상목록에 추가한다)
    .. git commit -m "문구" ( 커밋을 한다. description 도 추가)
    .. git push origin master (리모트 저장소에 커밋한 내용을 밀어 넣는다)

2/20(목)
- github pycham연결을 위한 설정 중
 git pull origin branchname --allow-unrelated-histories
  출처: https://cpdev.tistory.com/51 [하루하나]


2/25(화)
 - "https://github.com/mercur66/LogAnalize"에 형상관리가 가능하도록 Pycharm 세팅
 - Pandas를 이용하여 필요 항목별 데이터 추출
 - DB 저장 ( slqlite3를 이용하여 DB에 저장)


3/4(수)
: 데이터 전처리
# 파일 전처리  : data 객체에서 초기값으로 들어온 객체를 하기의 항목으로 나눠서 임시 dataTemp 객체에 넣는다.
#  IP   : "15.3.3.1"
#  date : '20200101123160' --YYYYMMDDHHMMSS
#  P/G  : "POST"
#  URL  : "/portal/approval/work/getSoaUndoCount.do"
#  PROTOCOL : "HTTP/1.1 "
#  STATUS : 200
#  SIZE : 343
#  InpuDate :"20200302"